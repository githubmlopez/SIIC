USE [ADMON01]
GO
/****** Object:  Trigger [dbo].[trgInsteadOfInsert]    Script Date: 01/10/2016 07:51:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Create trigger on table CI_FACTURA for Insert statement
ALTER TRIGGER [dbo].[trgInsteadOfInsertCXC] ON [dbo].[CI_FACTURA]
INSTEAD OF Insert
AS
declare
   @cve_empresa      varchar(4),
   @serie            varchar(6),
   @id_cxc           int,
   @id_cliente       numeric(10),
   @f_operacion      date,
   @f_captura        date,
   @imp_bruto        numeric(12,2),
   @imp_iva          numeric(12,2),
   @imp_neto         numeric(12,2),
   @cve_moneda       varchar(1),
   @imp_bruto_liq    numeric(12,2),
   @imp_iva_liq      numeric(12,2),
   @imp_neto_liq     numeric(12,2),
   @cve_moneda_liq   varchar(1),
   @tipo_cambio      numeric(8,2),
   @firma            varchar(10),
   @cve_chequera     varchar(6),
   @ruta_docto_pdf   varchar(250),
   @b_factura_pagada  bit,
   @tx_nota          varchar(400),
   @sit_transaccion  varchar(2);

declare

    @b_reg_correcto  bit,
    @pje_iva         numeric(7,4),
    @tx_error        varchar(300),
    @tx_error_part   varchar(300),
    @fol_audit       int;

declare 

    @k_verdadero     bit,
    @k_falso         bit,
    @k_activa        varchar(1), 
    @k_cancelada     varchar(1),
    @k_peso          varchar(1),
    @k_dolar         varchar(1),
    @k_fol_audit     varchar(4);
   
select   
    
    @k_verdadero     = 1,
    @k_falso         = 0,
    @k_cancelada     = 'C',
    @k_activa        = 'A', 
    @k_cancelada     = 'C',
    @k_peso          = 'P',
    @k_dolar         = 'D',
    @k_fol_audit     = 'AUDI';
    
set  @pje_iva = (select PJE_IVA FROM CI_PARAMETRO);
set  @b_reg_correcto =  @k_verdadero;
set  @tx_error_part  =  ' ';

select   @cve_empresa      = i.CVE_EMPRESA from inserted i;
select   @serie            = i.SERIE from inserted i;
select   @id_cxc           = i.ID_CXC from inserted i;
select   @id_cliente       = i.ID_CLIENTE from inserted i;
select   @cve_chequera     = i.CVE_CHEQUERA from inserted i;
select   @f_operacion      = i.F_OPERACION from inserted i;
select   @f_captura        = i.F_CAPTURA from inserted i;
select   @imp_bruto        = i.IMP_BRUTO from inserted i;
select   @imp_iva          = i.IMP_IVA from inserted i;
select   @imp_neto         = i.IMP_NETO from inserted i;
select   @cve_moneda       = i.CVE_MONEDA from inserted i;
select   @imp_neto_liq     = i.IMP_NETO_LIQ from inserted i;
select   @imp_iva_liq      = i.IMP_IVA_LIQ from inserted i;
select   @imp_bruto_liq    = i.IMP_BRUTO_LIQ from inserted i;
select   @cve_moneda_liq   = i.CVE_MONEDA_LIQ from inserted i;
select   @tipo_cambio      = i.TIPO_CAMBIO from inserted i;
select   @firma            = i.FIRMA from inserted i;
select   @ruta_docto_pdf   = i.RUTA_DOCTO_PDF from inserted i;
select   @b_factura_pagada = i.B_FACTURA_PAGADA from inserted i; 
select   @tx_nota          = i.TX_NOTA from inserted i;
select   @sit_transaccion  = i.SIT_TRANSACCION from inserted i;

BEGIN 
  SET NOCOUNT ON;

  set  @firma             =  ' '
  set  @sit_transaccion   =  @k_activa
  set  @f_captura         =  GETDATE()
  set  @b_factura_pagada  =  @k_falso

  IF   EXISTS (SELECT * FROM CI_FACTURA  WHERE  CVE_EMPRESA    =  @cve_empresa AND
                                                SERIE          =  @serie       AND
                                                ID_CXC         =  @id_cxc)
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part    =  @tx_error_part + ': La Factura ya existe';
  END                                          

  IF  @ruta_docto_pdf = null or @ruta_docto_pdf = ' '   
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part    =  @tx_error_part + ': No existe ruta PDF';
  END                                          

  IF  NOT EXISTS (SELECT * FROM CI_EMPRESA   WHERE  CVE_EMPRESA    =  @cve_empresa)
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part    =  @tx_error_part + ': Empresa no existe';
  END                                          

  IF  NOT EXISTS (SELECT * FROM CI_CLIENTE   WHERE  ID_CLIENTE     =  @id_cliente)                                    
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part = @tx_error_part + ': Cliente no existe';
  END                                          

  IF  NOT EXISTS (SELECT * FROM CI_CHEQUERA  WHERE  CVE_CHEQUERA   =  @cve_chequera)                                      
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part = @tx_error_part + ': Chequera no existe';
  END

  IF (@cve_moneda         <>  @k_peso   AND   @cve_moneda       <>  @k_dolar)       
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part = @tx_error_part + ': Moneda error';
  END

  IF (@cve_moneda_liq     <>  @k_peso   AND   @cve_moneda_liq   <>  @k_dolar)          
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part = @tx_error_part + ': Moneda Liq error';
  END

  IF (@sit_transaccion    <>  @k_activa AND   @sit_transaccion  <>  @k_cancelada)   
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part = @tx_error_part + ': Situacion no existe';
  END
  
  IF  @imp_bruto                                                <=  0                                                  
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part = @tx_error_part + ':  Importe Bruto <= 0';
  END
  
  IF  @cve_moneda      =  @k_dolar  AND  @tipo_cambio <=  0                                           
  BEGIN
    set @b_reg_correcto   =  @k_falso;
    set @tx_error_part = @tx_error_part + ':  Tipo Cambio <= 0';
  END                        
           
  IF  @b_reg_correcto                                        =  @k_verdadero                                      
  BEGIN
    set  @imp_iva          =  @imp_bruto * (@pje_iva / 100) 
    set  @imp_neto         =  @imp_bruto + @imp_iva
    set  @imp_bruto_liq    =  @imp_bruto
    set  @imp_neto_liq     =  @imp_neto
    set  @imp_iva_liq      =  @imp_iva
 
    Insert into CI_FACTURA (
                CVE_EMPRESA,          
                SERIE,                
                ID_CXC,               
                ID_CLIENTE,           
                F_OPERACION,          
                F_CAPTURA,           
                IMP_BRUTO,           
                IMP_IVA,              
                IMP_NETO,             
                CVE_MONEDA,          
                IMP_BRUTO_LIQ,        
                IMP_IVA_LIQ,   
                IMP_NETO_LIQ,         
                CVE_MONEDA_LIQ,  
                TIPO_CAMBIO,          
                FIRMA,
                CVE_CHEQUERA,            
                RUTA_DOCTO_PDF,
                B_FACTURA_PAGADA,
                TX_NOTA,              
                SIT_TRANSACCION)      
           values     
               (@cve_empresa,
                @serie,       
                @id_cxc,
                @id_cliente,        
                @f_operacion, 
                @f_captura, 
                @imp_bruto, 
                @imp_iva,          
                @imp_neto, 
                @cve_moneda,       
                @imp_bruto_liq,    
                @imp_iva_liq, 
                @imp_neto_liq,     
                @cve_moneda_liq,      
                @tipo_cambio,
                @firma,
                @cve_chequera,
                @ruta_docto_pdf,
                @b_factura_pagada,
                @tx_nota,
                @sit_transaccion)
 
  END
  ELSE
  BEGIN
    set @tx_error = 'Error CI_FACTURA : ' + @cve_empresa + '  ' + @SERIE + '  ' + CAST(@id_cxc AS varchar(10)) + @tx_error_part
 
    set @fol_audit  =  (select NUM_FOLIO FROM CI_FOLIO WHERE CVE_FOLIO = @k_fol_audit)
    
    UPDATE CI_FOLIO
           SET NUM_FOLIO = @fol_audit + 1
    WHERE  CVE_FOLIO     = @k_fol_audit

    insert into  CI_AUDIT_ERROR (
                 ID_FOLIO,
                 F_OPERACION,
                 TX_ERROR)      
           values
                (@fol_audit,
                 GETDATE(),
                 @tx_error)
    COMMIT
    RAISERROR('El INSERT TIENE INCONSISTENCIA DE INFORMACION',11,1)
  END    
END

